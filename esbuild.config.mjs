import esbuild from 'esbuild';
import process from 'process';
import builtins from 'builtin-modules';
import path from 'path';
import * as fs from 'fs-extra';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const moveFilePlugin = {
    name: 'move-file',
    setup(build) {
        build.onEnd(async (result) => {
            const srcPath = path.join(
                process.cwd(),
                'src',
                'knowledge-bases',
                'aws-bedrock',
                'aws-cloudformation-template.yml'
            );
            const destPath = path.join(
                process.cwd(),
                'attachments',
                'aws-cloudformation-template.yml'
            );

            try {
                await fs.ensureDir(path.dirname(destPath));
                await fs.copy(srcPath, destPath, { overwrite: true });
            } catch (err) {
                console.error('Error moving file:', err);
            }
        });
    },
};

const prod = process.argv[2] === 'production';

const context = await esbuild.context({
    banner: {
        js: banner,
    },
    entryPoints: ['src/main.ts'],
    bundle: true,
    external: [
        'obsidian',
        'electron',
        '@codemirror/autocomplete',
        '@codemirror/collab',
        '@codemirror/commands',
        '@codemirror/language',
        '@codemirror/lint',
        '@codemirror/search',
        '@codemirror/state',
        '@codemirror/view',
        '@lezer/common',
        '@lezer/highlight',
        '@lezer/lr',
        ...builtins,
    ],
    format: 'cjs',
    target: 'es2018',
    logLevel: 'info',
    sourcemap: prod ? false : 'inline',
    treeShaking: true,
    outfile: 'main.js',
    minify: prod,
    plugins: [moveFilePlugin],
});

if (prod) {
    await context.rebuild();
    process.exit(0);
} else {
    await context.watch();
}
